# Generated by Django 5.1.5 on 2025-04-07 08:40

import autoslug.fields
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CateringBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=15)),
                ('event_type', models.CharField(default='other', max_length=50)),
                ('guests', models.IntegerField()),
                ('date', models.DateField()),
                ('time', models.CharField(default='other', max_length=20)),
                ('menu_preference', models.CharField(default='other', max_length=50)),
                ('special_requests', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('food_name', models.CharField(max_length=500)),
                ('food_content', models.CharField(max_length=500)),
                ('food_slug', autoslug.fields.AutoSlugField(editable=False, null=True, populate_from='food_name', unique=True)),
                ('food_img_url', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('food_price', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='FoodTaste',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taste_type', models.CharField(choices=[('VEG', 'veg'), ('NON-VEG', 'non-veg')], max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='FoodType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('food_type', models.CharField(choices=[('BREAKFAST', 'Breakfast'), ('BRUNCH', 'Brunch'), ('LUNCH', 'Lunch'), ('DINNER', 'Dinner'), ('BEVRAGE', 'Bevrage'), ('DESSERT', 'Dessert'), ('APPETIZERS', 'Appetizers'), ('SNACKS', 'Snacks'), ('BUFFET', 'Buffet'), ('SMOOTIES', 'Smooties')], max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_number', models.CharField(max_length=10, unique=True)),
                ('capacity', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('available', 'Available'), ('occupied', 'Occupied')], default='available', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_cart', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('rating', models.IntegerField()),
                ('feedback_type', models.CharField(max_length=50)),
                ('message', models.TextField()),
                ('created_at', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='overallBackend.cart')),
                ('food_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='overallBackend.food')),
            ],
        ),
        migrations.AddField(
            model_name='food',
            name='taste',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='overallBackend.foodtaste'),
        ),
        migrations.AddField(
            model_name='food',
            name='food_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='overallBackend.foodtype'),
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='overallBackend.table')),
            ],
        ),
    ]
